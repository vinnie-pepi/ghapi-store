//@require stylesheets/main.css.sass
//@require javascripts/main.js.coffee

.container
  .row
    .col-md-6.col-md-offset-3
      %h3
        Enter details about this company
        %small= date_tag  # find this function in helpers
      %hr

      // Creating a form, you may use any of the
      // rails form helpers.
      // http://guides.rubyonrails.org/form_helpers.html


      // all the information uploaded in the batch will be
      // contained within the inputs hash
      %h5
        Company name: #{inputs['name']}
      %p
        Address:
        %blockquote.small
          #{inputs['address']}, #{inputs['address_ext']}
          %br
          #{inputs['locality']}, #{inputs['region']} #{inputs['postcode']}

      // use rails form helper because a security token is required
      // path is the variable that stores that submit path
      = form_tag path, id: 'my-form' do
        // bootstrap css is available by default
        // see documentations: http://getbootstrap.com/
        .form-group
          %label Which fields (if any) are incorrect?
          %input.form-control(type="text" name="assignment[incorrect_fields]" value="#{assignment['incorrect_fields']}")
          %p.help Please use comma separated list

        // generate_text_input generates the code above
        = generate_text_input('assignment[name]', { placeholder: 'better name', label: 'Correct the name:' }) do
          %p.help leave blank if no correction necessary
        

        .form-group
          %label Which category most aptly describes this business?
          %select.form-control(name="assignment[category]")
            - inputs['categories'].each do |c|
              %option(name="#{c.gsub(' ', '_')}")= c
        .form-group.form-inline
          %label Would you use this service?
          .radio
            %label
              %input{ type: "radio", 
                      name: "assignment[opinion]", 
                      value: "true", 
                      checked: (assignment['opinion'] == 'true' ? 'checked' : nil) }
              Yes
          // generate_radio generates the code above
          = generate_radio 'maybe', 'assignment[opinion]'
          // if label is not included, value will be used
          = generate_radio 'false', 'assignment[opinion]', { label: "No" }
        .form-group
          .checkbox
            %label
              %input{ type: "checkbox", 
                      value: "true", 
                      name: "assignment[open]", 
                      checked: (assignment['open'] == 'true' ? 'checked' : nil) }
              This business is still open
          // generate_checkbox generates the code above
          = generate_checkbox 'true', 'assignment[reservations]', { label: 'This business accepts reservations' }
        .form-actions
          %button.btn.btn-primary(type="submit") Finish Work
